@using Microsoft.AspNetCore.Identity
@inject SignInManager<CustomUserModel> SignInManager
@inject UserManager<CustomUserModel> UserManager


@{
    CustomUserModel currentUser;
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {


        currentUser = await UserManager.FindByEmailAsync(User.Identity.Name);
        if (await UserManager.IsInRoleAsync(currentUser, "Estates_Admin"))
        {
            <div class="dropdown">
                <a class="btn btn-light dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
                    Admin Menu
                </a>

                <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                    <li><a class="nav-link" asp-area="Admin" asp-controller="RolesManager" asp-action="Index">Roles</a></li>
                    <li><a class="nav-link" asp-area="Admin" asp-controller="UserRoles" asp-action="Index">Users</a></li>
                    <li><a class="nav-link" asp-area="Admin" asp-controller="Institution" asp-action="Index">Institution</a></li>
                </ul>
            </div>
        }



        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>

    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
